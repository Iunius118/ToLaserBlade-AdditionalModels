plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1+'
}

version = mod_version
group = maven_group
archivesBaseName = archives_base_name

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: "${mappings_channel}", version: "${mappings_version}"

    runs {
        client {
            workingDirectory project.file('run')

            // property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'tlbexmodels'

            mods {
                tlbexmodels {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'tlbexmodels'

            mods {
                tlbexmodels {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            // property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'tlbexmodels'

            mods {
                tlbexmodels {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'tlbexmodels', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                tlbexmodels {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    flatDir {
        dir 'libs'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:' + minecraft_version + '-' + forge_version

    // ToLaserBlade from ./libs
    implementation fg.deobf("com.github.iunius118.tolaserblade:ToLaserBlade:${tolaserblade_version}")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "tlbexmodels",
            "Specification-Vendor": "Iunius118",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": project.jar.archiveVersion,
            "Implementation-Vendor": "Iunisu118",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    from("LICENSE", "CHANGELOG.txt", "CREDITS.txt")
}

jar.finalizedBy('reobfJar')

// publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    // Use the UTF-8 charset for Java compilation
    options.encoding = 'UTF-8'
}
